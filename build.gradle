// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//        Thoughtfully generated by synapticloop project initialiser
//
//          https://github.com/synapticloopltd/project-initialiser
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


// list all of the plugins for this project
plugins {
	id 'java'
	id 'eclipse'
	id 'maven-publish'
	id 'co.riiid.gradle' version '0.4.2'
	id "com.jfrog.bintray" version "1.7.3"
	id 'net.saliman.cobertura' version '2.4.0'
	id 'com.github.ben-manes.versions' version '0.14.0'

	id 'synapticloop.copyrightr' version '1.1.2'
	id 'synapticloop.documentr' version '2.8.2'
}

// textual information for this project
group = 'synapticloop'
archivesBaseName = 'getcookie-java-api'
description = """A Java API for getcookie.com"""

version = '1.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// all of the repositories in use for this project
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()

}
// list all of the dependencies for this project
dependencies {
	runtime 'org.apache.httpcomponents:httpclient:4.5.3'
	runtime 'commons-io:commons-io:2.5'
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	runtime 'org.slf4j:slf4j-api:1.7.13'
	runtime 'org.apache.commons:commons-lang3:3.5'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
	compile 'org.apache.logging.log4j:log4j-core:2.8.2'

	compile 'org.apache.httpcomponents:httpclient:4.5.3'
	compile 'commons-io:commons-io:2.5'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	compile 'org.slf4j:slf4j-api:1.7.13'
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
	compile 'org.apache.logging.log4j:log4j-core:2.8.2'


	testRuntime 'junit:junit:4.12'

	testCompile 'junit:junit:4.12'

}

// we always want to fail on version conflicts
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'org.slf4j:slf4j-api:1.7.13',
					'junit:junit:4.12'
	}
}


copyrightr {
	dryRun = false

	copyrightHolder = "Synapticloop"

	includes = [ 
		"src/**/*.java",
		"src/**/*.groovy",
	]
	excludes = [ "**/*.class" ]
	onlyReplaceFirst = false

	// the year separator to use
	yearSeparator = " - "

}

/*
 * COBERTURA
 */

cobertura {
	coverageFormats = [ 'html', 'xml']
}

test {
	include '**/*Test.class' 
	forkEvery = 50 
}


def javaApiUrl = 'http://docs.oracle.com/javase/8/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}


publishing {
	publications {
		synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'
			artifactId 'getcookie-java-api'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}


github {
	owner = 'synapticloopltd'
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '.jar'
	]
}


bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'getcookie-java-api'
	}
}
